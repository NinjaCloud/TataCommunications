Deployment
Task 1: Write a Deployment YAML and Apply it

vi dep-nginx.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dep-nginx
  name: dep-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dep-nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dep-nginx
    spec:
      containers:
      - image: nginx:1.11
        name: nginx
        ports:
        - containerPort: 80


kubectl apply -f dep-nginx.yaml
kubectl get deployments
kubectl get rs
kubectl get pods

kubectl exec -it <replace pod_name> -- /bin/bash
nginx -v
exit

Task 2: Update the Deployment with a newer image

kubectl set image deployment/nginx-dep nginx-ctr=nginx --record
kubectl describe deployments
kubectl get pods

kubectl exec -it <replace pod_name> -- /bin/bash
nginx -v
exit

Task 3: Rollback of Deployment 

kubectl rollout history deployment/nginx-dep
kubectl rollout undo deployment/nginx-dep --to-revision=1
kubectl get pods

kubectl exec -it <replace pod_name> -- /bin/bash
nginx -v
exit

Task 4: Scaling of Deployments

kubectl get deployments
kubectl get pods

kubectl scale deployment nginx-dep --replicas=8
kubectl get deployments
kubectl get pods

kubectl scale deployment nginx-dep --replicas=2
kubectl get deployments
kubectl get pods

kubectl delete -f dep-nginx.yaml






Lab 4: DaemonSet in Kubernetes

vi daemonset.yaml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: example-daemonset
  labels:
    app: example
spec:
  selector:
    matchLabels:
      app: example
  template:
    metadata:
      labels:
        app: example
    spec:
      containers:
        - name: example-container
          image: nginx:latest
          ports:
            - containerPort: 80


kubectl apply -f ds-pod.yaml
kubectl get ds fluent-ds
kubectl get pods -o wide
kubectl delete -f ds-pod.yaml


https://quizizz.com/join?gc=157712
